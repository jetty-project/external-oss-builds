#!groovy
pipeline {
  agent { node { label 'linux' } }
  options {
    buildDiscarder logRotator( numToKeepStr: '20' )
  }
  parameters {
    string( defaultValue: '9.4.44.v20210927', description: 'Jetty version to use to build Airlift project',
            name: 'JETTY_VERSION' )
    string( defaultValue: 'jdk11', description: 'JDK to use (jdk8,jdk11,jdk14)', name: 'JDK' )
    string( defaultValue: 'master', description: 'Airlift branch', name: 'AIRLIFT_BRANCH' )
  }
  stages {
    stage("Checkout Airlift"){
      steps{
        git url: "https://github.com/airlift/airlift.git", branch: "${AIRLIFT_BRANCH}"
      }
    }
    stage("Build Airlift"){
      agent { node { label 'linux' } }
      steps{        
        container('jetty-build') {
          timeout( time: 120, unit: 'MINUTES' ) {              
            withEnv(["JAVA_HOME=${ tool "$jdk" }",
                   "PATH+MAVEN=${ tool "$jdk" }/bin:${tool "maven3"}/bin",
                   "MAVEN_OPTS=-Xms2g -Xmx6g -Djava.awt.headless=true"]) {
              configFileProvider(
                    [configFile(fileId: 'oss-settings.xml', variable: 'GLOBAL_MVN_SETTINGS')]) {          
              sh "mvn -V -B -U clean install -T3 -Dmaven.test.failure.ignore=true -fae -Ddep.jetty.version=${JETTY_VERSION}"
              }
           }  
         }
        }    
      }
      post {
        always {
          script{
            currentBuild.description = "Build Airlift branch ${AIRLIFT_BRANCH}, Jetty Version ${JETTY_VERSION}, jdk ${jdk}"
          }
          junit testResults: '**/target/surefire-reports/*.xml'
        }
      }
    }
  }
}
