#!groovy
pipeline {
  agent { node { label 'linux' } }
  options {
    buildDiscarder logRotator( numToKeepStr: '20' )
  }
  parameters {
    string( defaultValue: '9.4.34-SNAPSHOT', description: 'Jetty version to use to build Airlift project',
            name: 'JETTY_VERSION' )
    string( defaultValue: 'jdk11', description: 'JDK to use (jdk8,jdk11,jdk14)', name: 'JDK' )
    string( defaultValue: 'master', description: 'Waiter branch', name: 'WAITER_BRANCH' )
  }
  tools {
    jdk "$jdk"
    maven 'maven3'
  }
  environment {
    PATH = "/root/.local/bin:$PATH"
  }

  stages {
    stage("Checkout Waiter & Install leiningen Waiter") {
      steps {
        container( 'jetty-build' ) {
          withEnv( ["JAVA_HOME=${tool "${jdk}"}"]) {
            git url: "https://github.com/twosigma/waiter.git", branch: "${WAITER_BRANCH}"
            dir( "waiter/bin/ci/" ) {
              sh "./install-lein"
            }
          }
        }
      }
    }
    stage("Checkout Jet & build Jet"){
      steps{
        container('jetty-build') {
          git url: "https://github.com/twosigma/jet.git", branch: "${WAITER_BRANCH}"
          // TODO remove it when docker image have it
          //sh "apt update && apt install -y leiningen jq netcat"
          withEnv( ["JAVA_HOME=${tool "${jdk}"}"]) {
            configFileProvider([configFile(fileId: 'profiles.clj', variable: 'PROFILES_CLJ' ),
                                configFile(fileId:'lein.http.enabled', variable: 'LEIN_HTTP_ENABLED' )]) {
              sh "mkdir -p ~/.lein"
              sh "cp $PROFILES_CLJ ~/.lein/profiles.clj"
              sh "cat $LEIN_HTTP_ENABLED >> ./project.clj"
              sh "lein install"
            }
          }
        }
      }
    }

    stage("Checkout Waiter & Build Waiter"){
      steps{
        container('jetty-build') {
          withEnv( ["JAVA_HOME=${tool "${jdk}"}"]) {
            git url: "https://github.com/twosigma/waiter.git", branch: "${WAITER_BRANCH}"
            //sh "apt update && apt install -y leiningen jq netcat"
            dir("waiter"){
              configFileProvider(
                      [configFile(fileId: 'oss-settings.xml', variable: 'GLOBAL_MVN_SETTINGS'),
                       configFile(fileId:'lein.http.enabled', variable: 'LEIN_HTTP_ENABLED' ),
                       configFile(fileId: 'profiles.clj', variable: 'PROFILES_CLJ')]) {
                sh "mkdir -p ~/.m2"
                sh "cp $GLOBAL_MVN_SETTINGS ~/.m2/settings.xml"
                sh "mkdir -p ~/.lein"
                sh "cp $PROFILES_CLJ ~/.lein/profiles.clj"
                sh "cat $LEIN_HTTP_ENABLED >> ./project.clj"
                sh "cat $LEIN_HTTP_ENABLED ../containers/test-apps/jwks-server/project.clj"
                sh "cat $LEIN_HTTP_ENABLED ../containers/test-apps/jwks-server/project.clj"
                sh "./bin/ci/run-integration-tests.sh composite eftest integration-fast"
              }
            }
          }
        }
      }
    }
  }
  post {
    always {
      script{
        currentBuild.description = "Build Waiter branch ${WAITER_BRANCH}, Jetty Version ${JETTY_VERSION}, jdk ${jdk}"
      }
      junit testResults: '**/target/surefire-reports/*.xml', allowEmptyResults: true
    }
  }
}
